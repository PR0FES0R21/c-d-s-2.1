@import url('https://fonts.googleapis.com/css2?family=Space+Mono:wght@400;700&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Orbitron:wght@400;500;600;700;800;900&display=swap');

@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  body {
    @apply bg-gray-900 text-white;
    font-family: 'Space Mono', monospace;
  }

  .font-orbitron {
    font-family: 'Orbitron', sans-serif;
  }

  .font-mono {
    font-family: 'Space Mono', monospace;
  }

  .hide-scrollbar::-webkit-scrollbar {
    display: none;
  }

  .hide-scrollbar {
    -ms-overflow-style: none;
    scrollbar-width: none;
  }
}

/* RainbowKit custom styles */
.iekbcc0 {
  --rk-colors-accentColor: #9600ef !important;
  --rk-colors-accentColorForeground: white !important;
}

@layer utilities {

  /* Utility umum dari project Anda */
  .animate-pulse-slow {
    animation: pulse 3s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  }

  .bg-grid-pattern {
    background-size: 50px 50px;
    background-image:
      linear-gradient(to right, rgba(255, 255, 255, 0.1) 1px, transparent 1px),
      linear-gradient(to bottom, rgba(255, 255, 255, 0.1) 1px, transparent 1px);
  }

  .progress-bar-grid {
    background-image: repeating-linear-gradient(90deg,
        rgba(0, 240, 255, 0.2) 0px,
        rgba(0, 240, 255, 0.2) 2px,
        transparent 2px,
        transparent 12px);
    background-size: 200% 100%;
    animation: slideGrid 15s linear infinite;
  }

  .progress-bar-glow {
    box-shadow:
      0 0 10px rgba(0, 240, 255, 0.3),
      0 0 20px rgba(0, 240, 255, 0.2),
      inset 0 0 15px rgba(0, 240, 255, 0.3);
  }

  .progress-bar-shape {
    clip-path: polygon(0% 0%,
        calc(100% - 10px) 0%,
        100% 10px,
        100% 100%,
        10px 100%,
        0% calc(100% - 10px));
  }

  /* --- Styling dan Animasi untuk TerminalScanner --- */

  /* Efek Pulse untuk Lingkaran Radar Utama */
  .animate-radar-pulse {
    animation: radarPulse 2s infinite ease-in-out;
  }

  /* Kontainer untuk Efek Ping/Blip Radar */
  .radar-ping-container {
    /* Tidak memerlukan style khusus di sini jika ping diatur via child */
  }

  /* Elemen Ping/Blip Radar */
  .radar-ping {
    position: absolute;
    border-radius: 50%;
    border: 1px solid theme('colors.green.400');
    /* Warna border ping */
    opacity: 0;
    transform: scale(0);
    animation: radarPingEffect 2.8s cubic-bezier(0.1, 0.7, 0.3, 1) infinite;
    z-index: 1;
    /* Di bawah sweep area dan dot statis */
  }

  .radar-ping-delay-1 {
    animation-delay: 0.7s;
  }

  .radar-ping-delay-2 {
    animation-delay: 1.3s;
  }

  /* Kontainer untuk Sweep Radar yang Ditingkatkan (Berputar) */
  .radar-sweep-enhanced {
    position: absolute;
    inset: 0;
    animation: radarSweepRotation 4s linear infinite;
    /* Durasi rotasi sweep */
    z-index: 2;
    /* Di atas ping, di bawah dot statis */
  }

  /* Area Gradien Berwarna untuk Sweep Radar */
  .radar-sweep-gradient-area {
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background: conic-gradient(
        /* Conic gradient dimulai dari atas (12 o'clock) secara default */
        /* Kita ingin garis sweep di kanan (3 o'clock = 90deg dalam conic) */
        /* Jadi gradien trail dimulai dari 90deg dan mengikuti searah jarum jam */
        transparent 0deg,
        transparent 89deg,
        rgba(0, 229, 255, 0.25) 90deg,
        /* Puncak gradien di 90deg (kanan) */
        rgba(0, 229, 255, 0.02) 360deg,
        transparent 360deg,
        transparent 190deg);
    transform-origin: center center;
  }

  /* Garis Visual Utama untuk Sweep Radar */
  .radar-sweep-line-visual {
    position: absolute;
    top: 50%;
    left: 50%;
    width: 50%;
    height: 1px;
    background: linear-gradient(to right, rgba(0, 229, 255, 0.2), theme('colors.cyan.400'));
    transform-origin: left center;
    transform: translateY(-50%);
  }

  /* Dot Radar Statis dengan Animasi Blink */
  .radar-dot {
    animation: radarDotBlinkOriginal 1.7s infinite ease-in-out;
    /* Ganti nama animasi agar tidak konflik */
    z-index: 3;
    /* Di atas semua elemen sweep dan ping */
  }

  .radar-dot-alt {
    animation: radarDotBlinkOriginal 2.2s infinite ease-in-out 0.4s;
    /* Ganti nama animasi & delay agar blink tidak bersamaan */
    z-index: 3;
    /* Di atas semua elemen sweep dan ping */
  }

  /* Animasi untuk Bar Scanner di Kolom Kanan */
  .animate-scanner-bar-v2 {
    animation: scannerBarMovement 2.8s ease-in-out infinite;
  }

  /* Style untuk signal-scan-bar-container jika masih ada di JSX (opsional, bisa dihapus jika tidak) */
  .signal-scan-bar-container {
    animation: signalScanPulse 2.5s infinite ease-in-out;
  }

  /* === ENHANCED CHEVRON TRAIL ANIMATIONS === */

  /* Chevron Glow Animation - Sequential lighting effect */
  .animate-chevron-glow {
    animation: chevronGlow 1.8s ease-in-out infinite;
  }

  /* Chevron Pulse Animation - Radial glow effect */
  .animate-chevron-pulse {
    animation: chevronPulse 1.8s ease-in-out infinite;
  }

  /* Chevron Burst Animation - Explosive effect for button click */
  .animate-chevron-burst {
    animation: chevronBurst 0.6s ease-out forwards;
  }

  /* Chevron Element Styling */
  .chevron-element {
    filter: drop-shadow(0 0 4px currentColor);
    transition: all 0.3s ease;
  }

  .chevron-element:hover {
    filter: drop-shadow(0 0 8px currentColor);
    transform: scale(1.1);
  }

  /* === IMMERSIVE HOLOGRAPHIC UI ELEMENTS === */

  /* Holographic Container */
  .holographic-container {
    position: relative;
    background: linear-gradient(135deg, rgba(0, 229, 255, 0.05) 0%, rgba(147, 51, 234, 0.05) 100%);
    backdrop-filter: blur(20px);
    box-shadow:
      0 0 30px rgba(0, 229, 255, 0.1),
      inset 0 0 30px rgba(147, 51, 234, 0.05);
  }

  /* Neon Frame Effects */
  .neon-frame {
    box-shadow:
      0 0 10px rgba(147, 51, 234, 0.3),
      inset 0 0 10px rgba(147, 51, 234, 0.1);
  }

  .neon-frame-enhanced {
    box-shadow:
      0 0 15px rgba(0, 229, 255, 0.4),
      0 0 30px rgba(0, 229, 255, 0.2),
      inset 0 0 15px rgba(0, 229, 255, 0.1);
  }

  /* Motion Grid Background */
  .motion-grid-lines {
    background-image:
      linear-gradient(rgba(0, 229, 255, 0.1) 1px, transparent 1px),
      linear-gradient(90deg, rgba(0, 229, 255, 0.1) 1px, transparent 1px);
    background-size: 60px 60px;
    animation: motionGridMove 20s linear infinite;
  }

  /* Holographic Grid Background */
  .bg-holographic-grid {
    background-image:
      linear-gradient(rgba(147, 51, 234, 0.15) 1px, transparent 1px),
      linear-gradient(90deg, rgba(147, 51, 234, 0.15) 1px, transparent 1px),
      radial-gradient(circle at 25% 25%, rgba(0, 229, 255, 0.1) 0%, transparent 50%),
      radial-gradient(circle at 75% 75%, rgba(57, 255, 20, 0.1) 0%, transparent 50%);
    background-size: 40px 40px, 40px 40px, 200px 200px, 200px 200px;
    animation: holographicGridPulse 8s ease-in-out infinite;
  }

  /* Parallax Animations */
  .animate-parallax-slow {
    animation: parallaxFloat 15s ease-in-out infinite;
  }

  .animate-parallax-medium {
    animation: parallaxFloat 12s ease-in-out infinite reverse;
  }

  .animate-parallax-fast {
    animation: parallaxFloat 8s ease-in-out infinite;
  }

  /* Floating Particles */
  .animate-float-particle {
    animation: floatParticle 6s ease-in-out infinite;
  }

  /* Scanning Lines */
  .animate-scan-line-horizontal {
    animation: scanLineHorizontal 4s linear infinite;
  }

  .animate-scan-line-vertical {
    animation: scanLineVertical 6s linear infinite;
  }

  /* Rank-Up Cinematic Animations */
  .rank-up-glow {
    box-shadow:
      0 0 20px rgba(0, 229, 255, 0.5),
      0 0 40px rgba(0, 229, 255, 0.3),
      0 0 60px rgba(0, 229, 255, 0.1);
  }

  .rank-up-particle {
    animation: rankUpParticle 2s ease-out forwards;
  }

  .rank-up-scan {
    animation: rankUpScan 1.5s ease-in-out;
  }

  /* === PORTFOLIO LOCK OVERLAY ANIMATIONS === */

  /* Wave Animation for Lock Message */
  .animate-wave {
    animation: waveText 3s ease-in-out infinite;
  }

  /* Glitch Text Animation */
  .animate-glitch-text {
    animation: glitchText 4s ease-in-out infinite;
  }
}


/* === Keyframes Animasi === */

/* Keyframes untuk Pulse Umum */
@keyframes pulse {

  0%,
  100% {
    opacity: 0.3;
  }

  50% {
    opacity: 0.8;
  }
}

/* Keyframes untuk Slide Grid (jika masih dipakai) */
@keyframes slideGrid {
  0% {
    background-position: 0 0;
  }

  100% {
    background-position: -200% 0;
  }
}

/* Keyframes untuk Pulse Lingkaran Radar Utama */
@keyframes radarPulse {

  0%,
  100% {
    opacity: 0.6;
    transform: scale(0.95);
  }

  50% {
    opacity: 1;
    transform: scale(1);
  }
}

/* Keyframes untuk Rotasi Keseluruhan Elemen Sweep Radar */
@keyframes radarSweepRotation {
  from {
    transform: rotate(0deg);
  }

  to {
    transform: rotate(360deg);
  }
}

/* Keyframes untuk Efek Ping/Blip Radar */
@keyframes radarPingEffect {
  0% {
    transform: scale(0.05);
    /* Mulai sangat kecil */
    opacity: 0;
  }

  20% {
    transform: scale(0.2);
    /* Mulai terlihat */
    opacity: 0.7;
  }

  70% {
    transform: scale(1);
    /* Ukuran maksimal ping (sesuai width/height di JSX) */
    opacity: 0.2;
    /* Mulai memudar */
  }

  100% {
    transform: scale(1.1);
    /* Sedikit membesar lagi saat hilang */
    opacity: 0;
  }
}

/* Keyframes untuk Blink Dot Radar Statis (nama diubah agar tidak konflik) */
@keyframes radarDotBlinkOriginal {

  0%,
  100% {
    opacity: 0.4;
  }

  /* Sedikit lebih subtle blinknya */
  50% {
    opacity: 1;
  }
}

/* Keyframes untuk Gerakan Bar Scanner di Kolom Kanan */
@keyframes scannerBarMovement {
  0% {
    transform: translateX(-100%) scaleY(0.8);
    opacity: 0.7;
  }

  20% {
    transform: translateX(0%) scaleY(1);
    opacity: 1;
  }

  80% {
    transform: translateX(400%) scaleY(1);
    opacity: 1;
  }

  /* 400% karena width bar w-1/5 */
  100% {
    transform: translateX(500%) scaleY(0.8);
    opacity: 0.7;
  }
}

/* Keyframes untuk signalScanPulse (jika .signal-scan-bar-container masih dipakai) */
@keyframes signalScanPulse {

  0%,
  100% {
    box-shadow: 0 0 2px rgba(0, 255, 135, 0.2);
  }

  50% {
    box-shadow: 0 0 6px rgba(0, 255, 135, 0.5);
  }
}

/* === ENHANCED CHEVRON TRAIL KEYFRAMES === */

/* Sequential Chevron Glow - Creates the "chasing lights" effect */
@keyframes chevronGlow {
  0% {
    opacity: 0.3;
    filter: drop-shadow(0 0 2px currentColor);
    transform: scale(0.9);
  }

  25% {
    opacity: 1;
    filter: drop-shadow(0 0 12px currentColor) drop-shadow(0 0 20px rgba(0, 229, 255, 0.6));
    transform: scale(1.1);
  }

  50% {
    opacity: 0.8;
    filter: drop-shadow(0 0 8px currentColor);
    transform: scale(1);
  }

  100% {
    opacity: 0.3;
    filter: drop-shadow(0 0 2px currentColor);
    transform: scale(0.9);
  }
}

/* Radial Pulse for Glow Effect */
@keyframes chevronPulse {
  0% {
    opacity: 0;
    transform: scale(0.5);
  }

  25% {
    opacity: 0.6;
    transform: scale(1.2);
  }

  50% {
    opacity: 0.3;
    transform: scale(1.5);
  }

  100% {
    opacity: 0;
    transform: scale(2);
  }
}

/* Burst Effect for Button Click */
@keyframes chevronBurst {
  0% {
    opacity: 1;
    filter: drop-shadow(0 0 4px currentColor);
    transform: scale(1);
  }

  50% {
    opacity: 1;
    filter: drop-shadow(0 0 20px currentColor) drop-shadow(0 0 40px rgba(0, 229, 255, 0.8));
    transform: scale(1.3);
  }

  100% {
    opacity: 0.7;
    filter: drop-shadow(0 0 8px currentColor);
    transform: scale(1.1);
  }
}

/* === IMMERSIVE HOLOGRAPHIC UI KEYFRAMES === */

/* Motion Grid Movement */
@keyframes motionGridMove {
  0% {
    transform: translate(0, 0);
  }

  100% {
    transform: translate(60px, 60px);
  }
}

/* Holographic Grid Pulse */
@keyframes holographicGridPulse {

  0%,
  100% {
    opacity: 0.15;
    transform: scale(1);
  }

  50% {
    opacity: 0.25;
    transform: scale(1.02);
  }
}

/* Parallax Float Animation */
@keyframes parallaxFloat {

  0%,
  100% {
    transform: translate(0, 0) scale(1);
    opacity: 0.15;
  }

  25% {
    transform: translate(20px, -30px) scale(1.1);
    opacity: 0.25;
  }

  50% {
    transform: translate(-10px, -50px) scale(0.9);
    opacity: 0.2;
  }

  75% {
    transform: translate(-30px, -20px) scale(1.05);
    opacity: 0.18;
  }
}

/* Floating Particle Animation */
@keyframes floatParticle {
  0% {
    transform: translateY(0) rotate(0deg);
    opacity: 0.4;
  }

  25% {
    transform: translateY(-20px) rotate(90deg);
    opacity: 0.8;
  }

  50% {
    transform: translateY(-40px) rotate(180deg);
    opacity: 0.6;
  }

  75% {
    transform: translateY(-20px) rotate(270deg);
    opacity: 0.8;
  }

  100% {
    transform: translateY(0) rotate(360deg);
    opacity: 0.4;
  }
}

/* Scanning Line Animations */
@keyframes scanLineHorizontal {
  0% {
    transform: translateY(-100vh);
    opacity: 0;
  }

  10% {
    opacity: 1;
  }

  90% {
    opacity: 1;
  }

  100% {
    transform: translateY(100vh);
    opacity: 0;
  }
}

@keyframes scanLineVertical {
  0% {
    transform: translateX(-100vw);
    opacity: 0;
  }

  10% {
    opacity: 1;
  }

  90% {
    opacity: 1;
  }

  100% {
    transform: translateX(100vw);
    opacity: 0;
  }
}

/* Rank-Up Cinematic Keyframes */
@keyframes rankUpParticle {
  0% {
    transform: translateY(0) scale(1);
    opacity: 1;
  }

  100% {
    transform: translateY(-50px) scale(0);
    opacity: 0;
  }
}

@keyframes rankUpScan {
  0% {
    transform: translateX(-100%);
  }

  100% {
    transform: translateX(100%);
  }
}

/* === PORTFOLIO LOCK OVERLAY KEYFRAMES === */

/* Wave Text Animation - Gentle floating effect */
@keyframes waveText {

  0%,
  100% {
    transform: translateY(0px);
    opacity: 1;
  }

  25% {
    transform: translateY(-2px);
    opacity: 0.9;
  }

  50% {
    transform: translateY(0px);
    opacity: 1;
  }

  75% {
    transform: translateY(2px);
    opacity: 0.9;
  }
}

/* Glitch Text Animation - Subtle glitch effect */
@keyframes glitchText {

  0%,
  90%,
  100% {
    transform: translate(0);
    filter: hue-rotate(0deg);
  }

  2% {
    transform: translate(1px, 0);
    filter: hue-rotate(90deg);
  }

  4% {
    transform: translate(-1px, 0);
    filter: hue-rotate(180deg);
  }

  6% {
    transform: translate(0);
    filter: hue-rotate(270deg);
  }

  8% {
    transform: translate(1px, 0);
    filter: hue-rotate(360deg);
  }

  10% {
    transform: translate(0);
    filter: hue-rotate(0deg);
  }
}